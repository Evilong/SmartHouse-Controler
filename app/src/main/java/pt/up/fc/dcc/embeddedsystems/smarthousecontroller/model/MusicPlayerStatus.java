/*
 * Smart House
 * The API for the Smart House IOT project for embedded systems course
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package pt.up.fc.dcc.embeddedsystems.smarthousecontroller.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * MusicPlayerStatus
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-26T22:03:57.606Z")
public class MusicPlayerStatus {
  @SerializedName("State")
  private Boolean state = null;

  @SerializedName("Track")
  private Track track = null;

  public MusicPlayerStatus state(Boolean state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isState() {
    return state;
  }

  public void setState(Boolean state) {
    this.state = state;
  }

  public MusicPlayerStatus track(Track track) {
    this.track = track;
    return this;
  }

   /**
   * Get track
   * @return track
  **/
  @ApiModelProperty(required = true, value = "")
  public Track getTrack() {
    return track;
  }

  public void setTrack(Track track) {
    this.track = track;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MusicPlayerStatus musicPlayerStatus = (MusicPlayerStatus) o;
    return Objects.equals(this.state, musicPlayerStatus.state) &&
        Objects.equals(this.track, musicPlayerStatus.track);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, track);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MusicPlayerStatus {\n");
    
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    track: ").append(toIndentedString(track)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

